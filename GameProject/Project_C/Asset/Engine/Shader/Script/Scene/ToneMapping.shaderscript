
_Resources{
	Texture2D SceneTexture;
};

_Variables {

};

_Scene {
	_output.final = SceneTexture.Sample(_AnisotropicSampler, _input.tex);
	_output.final.rgb = ToneMapping(_output.final.rgb);

};


_Function {

float3 Tonemap_Partial(float3 x)
{
    float A = 0.15f;
    float B = 0.50f;
    float C = 0.10f;
    float D = 0.20f;
    float E = 0.02f;
    float F = 0.30f;
    return ((x*(A*x+C*B)+D*E)/(x*(A*x+B)+D*F))-E/F;
}

float3 Filmic(float3 v)
{
    float exposure_bias = 2.0f;
    float3 curr = Tonemap_Partial(v * exposure_bias);

    float3 W = float3(11.2f, 11.2f, 11.2f);
    float3 white_scale = float3(1.0f,1.0f,1.0f) / Tonemap_Partial(W);
    return curr * white_scale;
}


float3 ToneMapping(float3 final)
{
    return Filmic(final);

    float Gamma = 1.0f / 2.2f;

    final = final / (final + float3(1.0f, 1.0f, 1.0f));
   	final = pow(final, float3(Gamma, Gamma, Gamma));
    return final;
}

};